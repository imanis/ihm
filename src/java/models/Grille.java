package models;
// Generated 11 fï¿½vr. 2014 21:52:45 by Hibernate Tools 3.6.0

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Grille generated by hbm2java
 */
@Entity
@Table(name = "grille", catalog = "ihm_db", uniqueConstraints = @UniqueConstraint(columnNames = "idTerm")
)
public class Grille implements java.io.Serializable {

    private Integer idgrille;
    private PopulationCible populationCible;
    private TypeApplication typeApplication;
    private Terminal terminal;
    private String nomgrille;
    private String date;
    private int type;
    private Integer note;
    private Set<Lignegrille> lignegrilles = new HashSet<Lignegrille>(0);

    public Grille() {
        this.date = todayDate();
    }

    public Grille(String nomgrille, int type) {
        this.nomgrille = nomgrille;
        this.type = type;
    }

    public Grille(PopulationCible populationCible, TypeApplication typeApplication, Terminal terminal, String nomgrille, String date, int type, Integer note, Set<Lignegrille> lignegrilles) {
        this.populationCible = populationCible;
        this.typeApplication = typeApplication;
        this.terminal = terminal;
        this.nomgrille = nomgrille;
        this.date = date;
        this.type = type;
        this.note = note;
        this.lignegrilles = lignegrilles;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "idgrille", unique = true, nullable = false)
    public Integer getIdgrille() {
        return this.idgrille;
    }

    public void setIdgrille(Integer idgrille) {
        this.idgrille = idgrille;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idpopulation")
    public PopulationCible getPopulationCible() {
        return this.populationCible;
    }

    public void setPopulationCible(PopulationCible populationCible) {
        this.populationCible = populationCible;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idtype")
    public TypeApplication getTypeApplication() {
        return this.typeApplication;
    }

    public void setTypeApplication(TypeApplication typeApplication) {
        this.typeApplication = typeApplication;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idTerm", unique = true)
    public Terminal getTerminal() {
        return this.terminal;
    }

    public void setTerminal(Terminal terminal) {
        this.terminal = terminal;
    }

    @Column(name = "nomgrille", nullable = false, length = 30)
    public String getNomgrille() {
        return this.nomgrille;
    }

    public void setNomgrille(String nomgrille) {
        this.nomgrille = nomgrille;
    }

    @Column(name = "Date", length = 20)
    public String getDate() {
        return this.date;
    }

    public void setDate(String date) {
        this.date = date;
    }

    @Column(name = "type", nullable = false)
    public int getType() {
        return this.type;
    }

    public void setType(int type) {
        this.type = type;
    }

    @Column(name = "note")
    public Integer getNote() {
        return this.note;
    }

    public void setNote(Integer note) {
        this.note = note;
    }
    
    @OneToMany(cascade = {CascadeType.ALL}, fetch = FetchType.EAGER, mappedBy = "grille" )
    public Set<Lignegrille> getLignegrilles() {
        return this.lignegrilles;
    }

 

    public void setLignegrilles(Set<Lignegrille> lignegrilles) {
        this.lignegrilles = lignegrilles;
    }

    public String todayDate() {
        SimpleDateFormat sdfDate = new SimpleDateFormat("dd/MM/yyyy");
        Date now = new Date();
        String strDate = sdfDate.format(now);
        return strDate;
    }

    @Override
    public String toString() {
        return "Grille{" + "idgrille=" + idgrille + ", populationCible=" + populationCible + ", typeApplication=" + typeApplication + ", terminal=" + terminal + ", nomgrille=" + nomgrille + ", date=" + date + ", type=" + type + ", note=" + note + ", lignegrilles=" + lignegrilles + '}';
    }

}
