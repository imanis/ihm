package models;
// Generated 11 fï¿½vr. 2014 21:52:45 by Hibernate Tools 3.6.0


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * QuestionBs generated by hbm2java
 */
@Entity
@Table(name="question_bs"
    ,catalog="ihm_db"
)
public class QuestionBs  implements java.io.Serializable {


     private Integer idquestion;
     private CritereBs critereBs;
     private String question;
     private Set<TypeApplication> typeApplications = new HashSet<TypeApplication>(0);
     private Set<PopulationCible> populationCibles = new HashSet<PopulationCible>(0);
     private Set<Lignegrille> lignegrilles = new HashSet<Lignegrille>(0);
     private Set<Terminal> terminals = new HashSet<Terminal>(0);

    public QuestionBs() {
    }

    public QuestionBs(CritereBs critereBs, String question, Set<TypeApplication> typeApplications, Set<PopulationCible> populationCibles, Set<Lignegrille> lignegrilles, Set<Terminal> terminals) {
       this.critereBs = critereBs;
       this.question = question;
       this.typeApplications = typeApplications;
       this.populationCibles = populationCibles;
       this.lignegrilles = lignegrilles;
       this.terminals = terminals;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idquestion", unique=true, nullable=false)
    public Integer getIdquestion() {
        return this.idquestion;
    }
    
    public void setIdquestion(Integer idquestion) {
        this.idquestion = idquestion;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idcritaire")
    public CritereBs getCritereBs() {
        return this.critereBs;
    }
    
    public void setCritereBs(CritereBs critereBs) {
        this.critereBs = critereBs;
    }

    
    @Column(name="question", length=65535)
    public String getQuestion() {
        return this.question;
    }
    
    public void setQuestion(String question) {
        this.question = question;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="question-type", catalog="ihm_db", joinColumns = { 
        @JoinColumn(name="idq", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="idt", nullable=false, updatable=false) })
    public Set<TypeApplication> getTypeApplications() {
        return this.typeApplications;
    }
    
    public void setTypeApplications(Set<TypeApplication> typeApplications) {
        this.typeApplications = typeApplications;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="question-population", catalog="ihm_db", joinColumns = { 
        @JoinColumn(name="idq", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="idp", nullable=false, updatable=false) })
    public Set<PopulationCible> getPopulationCibles() {
        return this.populationCibles;
    }
    
    public void setPopulationCibles(Set<PopulationCible> populationCibles) {
        this.populationCibles = populationCibles;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="questionBs")
    public Set<Lignegrille> getLignegrilles() {
        return this.lignegrilles;
    }
    
    public void setLignegrilles(Set<Lignegrille> lignegrilles) {
        this.lignegrilles = lignegrilles;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="question-terminal", catalog="ihm_db", joinColumns = { 
        @JoinColumn(name="idq", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="idt", nullable=false, updatable=false) })
    public Set<Terminal> getTerminals() {
        return this.terminals;
    }
    
    public void setTerminals(Set<Terminal> terminals) {
        this.terminals = terminals;
    }


    @Override
    public String toString() {
        return  question ;
    }

      public String des(){
        return "-";
    }

}


